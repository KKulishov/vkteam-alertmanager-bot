apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  labels:
    app: redis
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app: redis
      sidecar: exporter-redis
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap/configmap_redis.yaml") . | sha256sum }}
      labels:
        app: redis
        sidecar: exporter-redis
    spec:
      containers:
        - name: redis
          image: redis:alpine
          #command: ["redis-server", "--appendonly", "yes"]
          command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 40Mi
          ports:
            - containerPort: 6379
          readinessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 6379
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 6379
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 2
            initialDelaySeconds: 20
          volumeMounts:
            - mountPath: /usr/local/etc/redis/
              name: redis-conf
      volumes:
        - name: redis-conf
          configMap:
            name: redis-configmap
            items:
              - key: redis.conf
                path: redis.conf
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  ports:
    - port: 6379
      targetPort: 6379
      name: tcp-redis
  selector:
    app: redis
  type: ClusterIP               